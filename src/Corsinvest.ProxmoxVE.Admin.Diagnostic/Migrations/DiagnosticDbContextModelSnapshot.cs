/*
 * SPDX-FileCopyrightText: Copyright Corsinvest Srl
 * SPDX-License-Identifier: AGPL-3.0-only
 */

// <auto-generated />
using System;
using Corsinvest.ProxmoxVE.Admin.Diagnostic.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Corsinvest.ProxmoxVE.Admin.Diagnostic.Migrations
{
    [DbContext(typeof(DiagnosticDbContext))]
    partial class DiagnosticDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("NOCASE")
                .HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("Corsinvest.ProxmoxVE.Admin.Diagnostic.Models.Execution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClusterName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Critical")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Info")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Warning")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Executions");
                });

            modelBuilder.Entity("Corsinvest.ProxmoxVE.Admin.Diagnostic.Models.ExecutionData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ExecutionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExecutionId")
                        .IsUnique();

                    b.ToTable("ExecutionDatas");
                });

            modelBuilder.Entity("Corsinvest.ProxmoxVE.Admin.Diagnostic.Models.IgnoredIssue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClusterName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Context")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("Gravity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("IdResource")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubContext")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("IgnoredIssues");
                });

            modelBuilder.Entity("Corsinvest.ProxmoxVE.Admin.Diagnostic.Models.ExecutionData", b =>
                {
                    b.HasOne("Corsinvest.ProxmoxVE.Admin.Diagnostic.Models.Execution", "Execution")
                        .WithOne("Data")
                        .HasForeignKey("Corsinvest.ProxmoxVE.Admin.Diagnostic.Models.ExecutionData", "ExecutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Execution");
                });

            modelBuilder.Entity("Corsinvest.ProxmoxVE.Admin.Diagnostic.Models.Execution", b =>
                {
                    b.Navigation("Data")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
